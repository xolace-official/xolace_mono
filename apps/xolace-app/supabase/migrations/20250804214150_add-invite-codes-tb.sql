create table "public"."professionals_invite_codes" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "code" text not null,
    "expired" boolean not null default false,
    "expired_at" timestamp with time zone,
    "professional" uuid
);


alter table "public"."professionals_invite_codes" enable row level security;

CREATE UNIQUE INDEX professionals_invite_codes_code_key ON public.professionals_invite_codes USING btree (code);

CREATE UNIQUE INDEX professionals_invite_codes_pkey ON public.professionals_invite_codes USING btree (id);

alter table "public"."professionals_invite_codes" add constraint "professionals_invite_codes_pkey" PRIMARY KEY using index "professionals_invite_codes_pkey";

alter table "public"."professionals_invite_codes" add constraint "professionals_invite_codes_code_key" UNIQUE using index "professionals_invite_codes_code_key";

alter table "public"."professionals_invite_codes" add constraint "professionals_invite_codes_professional_fkey" FOREIGN KEY (professional) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."professionals_invite_codes" validate constraint "professionals_invite_codes_professional_fkey";

grant delete on table "public"."professionals_invite_codes" to "anon";

grant insert on table "public"."professionals_invite_codes" to "anon";

grant references on table "public"."professionals_invite_codes" to "anon";

grant select on table "public"."professionals_invite_codes" to "anon";

grant trigger on table "public"."professionals_invite_codes" to "anon";

grant truncate on table "public"."professionals_invite_codes" to "anon";

grant update on table "public"."professionals_invite_codes" to "anon";

grant delete on table "public"."professionals_invite_codes" to "authenticated";

grant insert on table "public"."professionals_invite_codes" to "authenticated";

grant references on table "public"."professionals_invite_codes" to "authenticated";

grant select on table "public"."professionals_invite_codes" to "authenticated";

grant trigger on table "public"."professionals_invite_codes" to "authenticated";

grant truncate on table "public"."professionals_invite_codes" to "authenticated";

grant update on table "public"."professionals_invite_codes" to "authenticated";

grant delete on table "public"."professionals_invite_codes" to "service_role";

grant insert on table "public"."professionals_invite_codes" to "service_role";

grant references on table "public"."professionals_invite_codes" to "service_role";

grant select on table "public"."professionals_invite_codes" to "service_role";

grant trigger on table "public"."professionals_invite_codes" to "service_role";

grant truncate on table "public"."professionals_invite_codes" to "service_role";

grant update on table "public"."professionals_invite_codes" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."professionals_invite_codes"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access to public"
on "public"."professionals_invite_codes"
as permissive
for select
to public
using (true);


create policy "Update access to authenticated users"
on "public"."professionals_invite_codes"
as permissive
for update
to authenticated
using (true);




