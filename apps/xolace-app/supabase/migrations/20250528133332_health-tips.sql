create table "public"."health_tips" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text,
    "content" text not null,
    "created_by" uuid,
    "author_name" text not null,
    "author_avatar_url" text,
    "is_approved" boolean not null default false,
    "is_sponsored" boolean not null default false
);


alter table "public"."health_tips" enable row level security;

CREATE UNIQUE INDEX health_tips_pkey ON public.health_tips USING btree (id);

alter table "public"."health_tips" add constraint "health_tips_pkey" PRIMARY KEY using index "health_tips_pkey";

alter table "public"."health_tips" add constraint "health_tips_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."health_tips" validate constraint "health_tips_created_by_fkey";

grant delete on table "public"."health_tips" to "anon";

grant insert on table "public"."health_tips" to "anon";

grant references on table "public"."health_tips" to "anon";

grant select on table "public"."health_tips" to "anon";

grant trigger on table "public"."health_tips" to "anon";

grant truncate on table "public"."health_tips" to "anon";

grant update on table "public"."health_tips" to "anon";

grant delete on table "public"."health_tips" to "authenticated";

grant insert on table "public"."health_tips" to "authenticated";

grant references on table "public"."health_tips" to "authenticated";

grant select on table "public"."health_tips" to "authenticated";

grant trigger on table "public"."health_tips" to "authenticated";

grant truncate on table "public"."health_tips" to "authenticated";

grant update on table "public"."health_tips" to "authenticated";

grant delete on table "public"."health_tips" to "service_role";

grant insert on table "public"."health_tips" to "service_role";

grant references on table "public"."health_tips" to "service_role";

grant select on table "public"."health_tips" to "service_role";

grant trigger on table "public"."health_tips" to "service_role";

grant truncate on table "public"."health_tips" to "service_role";

grant update on table "public"."health_tips" to "service_role";

create policy "Enable read access for all authenticated users"
on "public"."health_tips"
as permissive
for select
to authenticated
using (true);




